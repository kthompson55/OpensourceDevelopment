package service;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

import models.Item;
import exceptions.ItemServiceException;

public class ServerItemService implements ItemService 
{
	private File f;
	private BufferedReader reader;
	private PrintWriter writer;
	private Map<Long, Item> items;
	
	public ServerItemService() throws FileNotFoundException
	{
		items = new HashMap<>();
		f = new File("ItemLog.txt");
		writer = new PrintWriter(f);
	}
	
	public void CloseStreams() throws IOException
	{
		reader.close();
		writer.close();
	}
	
	@Override
	public void addItem(Item newItem) throws ItemServiceException 
	{
		items.put(newItem.getId()newItem);
		
		DecimalFormat fmt = new DecimalFormat("#0.00");
        StringBuilder sb = new StringBuilder();
        sb.append("c|").append(newItem.getId()).append("|").append(newItem.getName()).append("|").append(newItem.getDescription()).append("|").append(fmt.format(newItem.getPrice())).append("|");
        sb.append(newItem.getStartDate()).append("|").append(newItem.getEndDate()).append("|").append(newItem.getImage());
        writer.write(sb.toString());
	}

	@Override
	public Item updateItem(Item newItem) throws ItemServiceException
	{
		Item ret = null;
		
		StringBuilder sb = new StringBuilder();
        sb.append("u|").append(newItem.getId()).append("|").append(newItem.getName()).append("|").append(newItem.getDescription()).append("|").append(newItem.getPrice()).append("|");
        sb.append(newItem.getStartDate()).append("|").append(newItem.getEndDate()).append("|").append(newItem.getImage());
        writer.write(sb.toString());
        ret = newItem;
        items.put(ret.getId(),ret);
        
        return ret;
	}

	@Override
	public void deleteItem(long id) throws ItemServiceException 
	{
        StringBuilder sb = new StringBuilder();
        sb.append("d|").append(id);
        writer.write(sb.toString());
	}
}
